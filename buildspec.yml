version: 0.2

env:
  variables:
    BACKEND_IMAGE_NAME: product-backend
    FRONTEND_IMAGE_NAME: product-frontend
  secrets-manager:
    DOCKERHUB_USERNAME: dockerhub:username
    DOCKERHUB_PASSWORD: dockerhub:password

phases:
  install:
    commands:
      - echo "Starting install phase..."
      - set -e  # Exit on error

  pre_build:
    commands:
      - echo "Logging in to Docker Hub..."
      - echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
      - VERSION_TAG=v$CODEBUILD_BUILD_NUMBER
      - export VERSION_TAG
      - echo "Version tag is $VERSION_TAG"

  build:
    commands:
      - echo "Building backend image..."
      - cd Products_Backend
      - docker build -t $BACKEND_IMAGE_NAME:$VERSION_TAG .
      - docker tag $BACKEND_IMAGE_NAME:$VERSION_TAG $DOCKERHUB_USERNAME/$BACKEND_IMAGE_NAME:$VERSION_TAG
      - cd ..

      - echo "Building frontend image..."
      - cd Products_UI
      - docker build -t $FRONTEND_IMAGE_NAME:$VERSION_TAG .
      - docker tag $FRONTEND_IMAGE_NAME:$VERSION_TAG $DOCKERHUB_USERNAME/$FRONTEND_IMAGE_NAME:$VERSION_TAG
      - cd ..

  post_build:
    commands:
      - echo "Pushing backend image to Docker Hub..."
      - docker push $DOCKERHUB_USERNAME/$BACKEND_IMAGE_NAME:$VERSION_TAG

      - echo "Pushing frontend image to Docker Hub..."
      - docker push $DOCKERHUB_USERNAME/$FRONTEND_IMAGE_NAME:$VERSION_TAG

      - echo "Copying deployment YAMLs to root for CodePipeline..."
      - cp Products_Backend/backend-deployment.yaml .
      - cp Products_UI/frontend-deployment.yaml .
      - if [ "$(dirname ingress.yaml)" != "." ]; then cp ingress.yaml .; else echo "ingress.yaml already in root, skipping copy"; fi
      - echo "Final root directory content:"
      - ls -lh

artifacts:
  files:
    - backend-deployment.yaml
    - frontend-deployment.yaml
    - ingress.yaml
